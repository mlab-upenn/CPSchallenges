%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-visio_figs.vsd)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 12:16:12 11/23/10
%%For: (paja)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 14 552 250 698
%%HiResBoundingBox: 13.92 552.35 249.96 698.43
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 4044 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2010-11-23T12:16:12-05:00</xap:CreateDate>
         <xap:ModifyDate>2010-11-23T12:16:12-05:00</xap:ModifyDate>
         <xap:MetadataDate>2010-11-23T12:16:12-05:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:739D1A3625F7DF11A211886357D52160</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:739D1A3625F7DF11A211886357D52160</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>3693de90-11fc-11df-0000-13dc8e42754f</stRef:documentName>
            <stRef:instanceID>uuid:3aeb224c-0dcd-4287-8708-fe40b7533d5b</stRef:instanceID>
            <stRef:documentID>3693de90-11fc-11df-0000-13dc8e42754f</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Visio-visio_figs.vsd</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>paja</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
13.92 552.35 236.04 146.08 rectclip
[ 0 -1 1 0 -538.42998 712.34998 ] concat
q
13.92 552.35 m
160.0 552.35 l
160.0 788.39 l
13.92 788.39 l
h
W
n
q
0.12 0.0 0.0 0.12 0.0 0.0 cm
n
272.0 4841.92 m
187.0 4841.92 119.0 4910.92 119.0 4995.92 c
119.0 5080.92 187.0 5149.92 272.0 5149.92 c
272.0 5149.92 l
357.0 5149.92 426.0 5080.92 426.0 4995.92 c
426.0 4910.92 357.0 4841.92 272.0 4841.92 c
[/DeviceRGB] cs 1.0 1.0 1.0 sc
eofill
5.9994 w
1 J
1 j
n
272.0 4841.92 m
187.0 4841.92 119.0 4910.92 119.0 4995.92 c
119.0 5080.92 187.0 5149.92 272.0 5149.92 c
272.0 5149.92 l
357.0 5149.92 426.0 5080.92 426.0 4995.92 c
426.0 4910.92 357.0 4841.92 272.0 4841.92 c
h
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic Initial
ct_T42Dict begin
-0.496 -0.305 1.117 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /MSKBAA+TimesNewRoman,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420ff44a29700000124000007786670676d015abb920000089c000005cd
676c7966000000000000227800000f1668656164c514940700000e6c0000
0036686865610c7d077200000ea400000024686d74780000000000000ec8
000001486c6f636100000000000010100000075a6d61787008d90c500000
176c000000206e616d65000000000000178c0000002870726570791a47c3
000017b400000ac367646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592d00
0000000100000002e667b1b0afba5f0f3cf50819080000000000a31fb8bd
00000000b5c9aa29fc05fd8c08f608300002000900010000000000000001
00000721fe450057086bfc05fcfe08f60018000700000000000000000000
000000520639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0200004502000045020000450400007d0400
002004000044040000440400004404000044040000440400004404000044
040000440400004404000044040000440400004404000044040000440400
004404000044040000440400004404000044040000440400004404000044
04000044040000440400004404000044040000440556ffc80556ffc80556
ffc80556ffc80556ffc80556ffc80473008f0473008f04e3010004e30100
04e3010004e3010004e3010004e3010004e3010004e3010004e3010004e3
010004e3010004e3010004e3010004e3010004e3010004e3010004e30100
04e3010004e3010004e3010004e3010004e3010004e3010005c700230400
002700000034003400340034003400340034003400340034003400340034
003400340034003400590059005900ef017b022502250225022502250225
022502250225022502250225022502250225022502250225022502250225
022502250225022502250225031f031f031f031f031f031f03eb03eb04d4
04d404d404d404d404d404d404d404d404d404d404d404d404d404d404d4
04d404d404d404d404d404d404d40671078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b078b078b078b
078b078b078b078b078b078b078b078b078b078b078b078b000000010000
03ac00f2003c0068000500020010002f005500000483ffff000300020000
0001001200020002000000060016000054696d6573204e657720526f6d61
6e2c4974616c6963ba0054ffc003bbb345453240b803bbb32b2e3240b803
bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03
bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9
ffc003b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03
b800ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b90001
000003b7000103b700030800001f03b60381b23a1f0f411703b3001003b2
002003b2005003b2007003b200e003b2000600cf03b300df03b300ef03b3
00ff03b30004001203a8b2e2891fbe039f016b019a001f03980093080140
0c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3
651a6632b9ff800173b2196632bd038401170800001fffc002afb2313340
b802afb22e3340b802afb328293240b802afb326273240b802afb3212532
40b802afb31c203240b802afb2233340b802afb21933a0bc02af00b002af
00e002afb5034003212932b8fff2b33a263d32bc038203820382003a0800
b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e3269
be03810001008a03810001000e0381b32b2f3210b80381b3515b320cb803
81b34e513222b80381b3474d320eb80381b246330ab80381400926473212
254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381
003d0033fff44015253d331825355b32102526343206252a330c252e33b8
fffe4024252d330c3a2f33329925aa25ba25c92504052536330c25323832
193a293a383a03182517b80381b42825382504bc03810381038100250800
40101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc038003
800380001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33
b8ffdc400aac1f223222232b52320eb8037fb229330eb8037fb2223314b8
037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c
33410affee037f00390033fff8037f002b0033ffea037fb23a3320b8037f
b33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320eb803
7fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f
400c1d3322263032322226333832b8fff8400a262b2f3209261b21328abe
037f0001037f037f037f00260800402e1f371f062f063f06039f02af02bf
02cf02049f03af03bf03cf03046f037f038f03031f032f033f034f035f03
050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed
006f02ed000300af02af0001004f02af009f02af0002002f02af003f02af
0002003f02b00001004f02af005f02af0002002f02af003f02af00020070
03b2000103b203b202ed02ed02b002b002af02af401a3701003001400102
010100090102000800171700000012110840410b027b02230034000d013d
0034000d01370034000d011b401a340d8f340d84340d68340d59340d5434
0d48340d2c340d28340d411002350020000d021b0020000d01fc0020000d
01c30020000d01500020000d012c401a200df0200dbe200d94200d79200d
6a200d61200d5f200d44200d410d013e0138000d003d0138000d00300138
000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f001500
1f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e080100
1f0205001f02ab001f0204001f02ab001f0203001f0401001f0201003101
9a001f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb22634
1f411501a8002602ab001f01a5001e0125001f01a400ab02ab001f01a200
3102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109019b
00230401001f019a0033019a001f0176b2262e1fb8016cb231721f411101
6b0023019a001f016800240401001f014500260801001f013f0023040100
1f0123b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa
33b80801b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b8
0101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b2
1fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e
1f9333b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f7523e4
1f7026cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f
5324b80201b21f4f33b802abb21f4e26b8040140131f4731671f4626ab1f
4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b804
01b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007
012b402e077f077107690766074b074007380736072d0722072107140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009
505b58b101018e59014bb0c063004b6220b0f65323b8010a515ab0052342
01b0124b004b544218b0382bb00288b801005458b801ffb101018e851bb0
124358b900010140858d1bb900010159858d59590016763f183f123e1139
46443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b4544
b9027c027b45445958b90146027d455258b9027d01464459594bb0475320
5c58b9001e027c4544b90026027c45445958b9017f001e455258b9001e01
7f4459594bb05e53205c58b9001f027d4544b90025027d45445958b901a8
001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45
445958b9047000ab455258b900ab04704459594bb8012553205c58b1e61f
4544b11f1f45445958b9051000e6455258b900e605104459594bb0175320
5c58b124244544b1312445445958b12224455258b124224459594bb05153
205c58b124244544b1232445445958b17d24455258b1247d4459594bb06e
53205c58b124244544b1332445445958b1aa24455258b124aa4459592b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58
b1080042591610703eb0124358b911b53d801bba011c03d9000b2b59b00a
2342b00b2342003f3f182b103c012f5d060cb0062342b0072342b0124358
b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d41
2d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211b
ba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a
60b8016b2344590018456944456944184569444569447373737375757573
737475757575752b4bb026534bb03d515a58b1262645b0196044592b4518
6944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
004bb02a534bb03f515a58b1070745b04060445973732b2b451869442b2b
752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b0073
73732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff0
0381b112332b2b2b2b590173742b002b73752b2b732b2b2b2b2b73752b2b
2b2b2b0000>
[3863 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
end
end
%ADOEndSubsetFont
[ 1 /V/T/one/period/two/n
/N/three/m 32 /space/exclam/quotedbl
/numbersign/dollar/percent/ampersand/quotesingle/parenleft
/parenright/asterisk/plus/comma/hyphen/period
/slash/zero/one/two/three/four
/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at
/A/B/C/D/E/F
/G/H/I/J/K/L
/M/N/O/P/Q/R
/S/T/U/V/W/X
/Y/Z/bracketleft/backslash/bracketright/asciicircum
/underscore/grave/a/b/c/d
/e/f/g/h/i/j
/k/l/m/n/o/p
/q/r/s/t/u/v
/w/x/y/z/braceleft/bar
/braceright/asciitilde/bullet/Euro/bullet/quotesinglbase
/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex
/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron
/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space
/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex
/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth
/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis
/Yacute/Thorn/germandbls/agrave/aacute/acircumflex
/atilde/adieresis/aring/ae/ccedilla/egrave
/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
/N7/MSKBAA+TimesNewRoman,Italic -1 TZ
38.04 587.751 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 2006 57 <00010100ffe105c9054c0021015d40400009000a0a110814081b06210615
114010021238113d153b193920392148104c117d117c138e118f159d149c
15bd150e651f6420029c11ae11bc110320230123b8ffc0b320223423b8ff
c0b21d3523b8ffc0b31a1b3423b8ffc0b32e3a3423b8ffc0402c2a35090f
0a1d091a201b1d1a0801071d081911181d190f10101e0001140010110001
11101023212014212120b8ff764012100021201a1919090908022100092f
110111b8028ab2107e21ba033e00010142b5004028183f00b8ffc0401019
3a340f001900300080000400192209b80351b1c2182b2b4e10f45d2b2b01
4de4f6f4e45d003f3c3f3c103c103c2b87042e2b0e7d10c487082e182b0e
7d10c4180010ed0110c00010ed0110c00010ed0110c00010ed0110c0b106
02435458400963118211a211b21104005d593130012b2b2b2b2b5d5d5d5d
435c58b9001fffdeb2193920b8ffdeb219391eb8ffc0b114392b2b2b5900
5d015d051336353426232337210706060706070301363736353426273721
07060706060701013770084348240a02170b5741130a0b50021156160f2e
3f0c01980a311d376d76fd041f0469561e2d3c25250122291667fcd702d2
752e1f171b28042525040f1a6aa1fbf2>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/V 57 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 1 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\001) show
40.68 598.791 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 1598 55 <0001008f00000532054c0021012b40230340120b3f0d221039b50d01131a
141d13120b111d1205038802208821021001060101bb0308000a0021ffc0
400b1139211000300070000200b8030840101b100a0b0b1e1a1b141a1a1b
091c0a1bb8019c4014000221bd0100020a1312081a22281b100bd2121ab8
ffc0b33334341ab8ffc0b32b2e341ab8ffc0b32329341ab8ffc0b31e2034
1ab8ffc0400b181a347f1a9f1aaf1a031ab8021eb722091a171a220a67b9
034a00182b2b103c2b2b10f65d2b2b2b2b2b435c58b51a40140c3f1ab8ff
c0b217391ab8ffc0b323123f1ab8ffc0b712133e1a4032193f2b2b2b2b2b
5901ed2b3c2b10c0003f3c2b3f3cfc3c10fd3c3c3c870e2e2b057d10c42b
7a10f05d01182f2bc42b7a10e001182f382bc40110ed10fd390010ed0110
c00010ed0110c03130015d2b2b0121032336353427262323010615141633
3307213733323736363701232206060723012c04066f26132d228d6bfef4
3340512e0cfdb20b1a4e2a1d2f2a011951758f581c25054cfe984f3e4925
1cfc5ab029263125251911599003c33c7269>MSKBAA+TimesNewRoman,Italic AddT42Char 
1 178 20 <0001007d000003570568001b00ca401a071a015602670276027403bd0d05
080008101701170f04080f09b80138b308070106410b01380007001a01a3
0010020e002800190138001a01fd401300100f0103000828100f0fe60100
1401010019ba01f4001a030d40091b1b000508070c0001bb03280010001a
020bb31f0f010fb80327400b10011c2800100117011c0aba022801e30018
2b2b103c2b2b3c2b10c0012bf65de43cf53c003f3c3f3c10f4ed870e2e2b
7d10c42b11121739180010f5ed2bfc01f50010ed0110c00010ed0110c031
30015d5d0071010106151416170721373637363736371336373635342623
220727250357febe1c335e0afdfd0e521a2a152122e815020326211a370d
01510568fb9f632c2527072525020b121e2e770325490b141323280c245e
>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/T 55 def
/one 20 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 2 /T put
dup 3 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\002\003)
[6.47822 5.82332 ] pdfys
40.56 685.071 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 104 17 <00010045ffe9011000b3000b001eb900000391b2060b03b80174b509190c
6df5182b4e10f44ded003ffd3130373216151406232226353436aa2b3b3c
2a2a3b3bb33b2a2a3b3b2a2a3b00>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/period 17 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 4 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 24.013 -24.0 0.0 0.0 0.0] Tf
(\004\004\004)
[5.99996 5.99996 0.0 ] pdfys
Q
n
272.0 5267.92 m
187.0 5267.92 119.0 5335.92 119.0 5420.92 c
119.0 5505.92 187.0 5574.92 272.0 5574.92 c
272.0 5574.92 l
357.0 5574.92 426.0 5505.92 426.0 5420.92 c
426.0 5335.92 357.0 5267.92 272.0 5267.92 c
1.0 1.0 1.0 sc
eofill
n
272.0 5267.92 m
187.0 5267.92 119.0 5335.92 119.0 5420.92 c
119.0 5505.92 187.0 5574.92 272.0 5574.92 c
272.0 5574.92 l
357.0 5574.92 426.0 5505.92 426.0 5420.92 c
426.0 5335.92 357.0 5267.92 272.0 5267.92 c
h
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
38.04 638.751 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\001) show
40.68 649.791 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 478 21 <00010020000003c00568001d00b540218f08860b9c08960aac08ab0cbf08
ba0cce08ce180aef03ea04eb16ef17040b0c1dbd01a3001900190177001c
013840151d031718041605021514130312060317041604010bb80202400c
09ab0f051918e60000010c0cbf0217000201f7001e00060121001d0202b2
121a1fba01f601ef00182b4e10f64de4ed10f6e4003f3c10fd3c3ffde412
173901111217391217392eedec0010fd0110c9b1060243545840090f030b
041f031b0404005d593130005d015d212135001336353426232207273636
33321615140706070601213236373302c3fd5d0204a64d80668d5b2333c4
7281b01f3081c4feb90154526a17282501c40101778368838710818fb17e
584b7591defedf443900>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/two 21 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 5 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\002\005)
[6.47822 5.82332 ] pdfys
Q
n
272.0 5952.92 m
187.0 5952.92 119.0 6020.92 119.0 6105.92 c
119.0 6190.92 187.0 6259.92 272.0 6259.92 c
272.0 6259.92 l
357.0 6259.92 426.0 6190.92 426.0 6105.92 c
426.0 6020.92 357.0 5952.92 272.0 5952.92 c
1.0 1.0 1.0 sc
eofill
n
272.0 5952.92 m
187.0 5952.92 119.0 6020.92 119.0 6105.92 c
119.0 6190.92 187.0 6259.92 272.0 6259.92 c
272.0 6259.92 l
357.0 6259.92 426.0 6190.92 426.0 6105.92 c
426.0 6020.92 357.0 5952.92 272.0 5952.92 c
h
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
38.04 720.951 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\001) show
40.68 731.991 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 3298 81 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/n 81 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 6 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\002\006)
[6.47822 0.0 ] pdfys
Q
n
1.0 1.0 1.0 sc
884.000000 4605.919922 203.000000 355.000000 rectfill

n
884.0 4605.92 203.0 355.0 re
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
123.72 564.951 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 1098 49 <0001ffc7ffe10618054c00290162407507131712281436123a2646004512
471568027902a4180b54137618b418038301010b120c1d0b1d241e1d1d29
25281d290a02091d0a1c161b1d1c0001011e141514140102141502010123
131214130100131225242423161514161615290b0b0a0a00021d1c081413
0916132a281213151610012f13b8033e40141440371c3f144032193f4014
70148014a0140414b8032db309009924b80173400b1640371c3f16403219
3f16b8ffc0b2133916b8ffc0b3292d3416b8ffc0b31d243416b8ffc04019
1a353f164f167f168f16af1605167e2a091317161713162a0ab80173b1c4
182b2b103c3c2b2b2b10f45d2b2b2b2b2b2b01ede42bf65d2b2b01fee42b
103c103c2b10c0c0003f3c3f3c3f3c103c103c870e2e2b0e7d10c487082e
182b0e7d10c487082e182b057d10c4180010ed0110c00010ed0110c00010
ed0110c00010ed0110c00010ed0110c0b10602435458b40120090e34002b
593130005d015d5d01011336353426232227372107260706070607012301
0306151416170721373637363736370126262737024b01a3e31c34470c0d
0b01b40c44212f172021fec124fe3df11b315c0afe560e501b29141d2401
0d27595e0b054cfbd9031a6236252a012525010f15212f75fba20478fcb3
60332627072525020c121d2c7e03af3c2d032500>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/N 49 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 7 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\007) show
126.24 577.071 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\003) show
Q
n
1.0 1.0 1.0 sc
891.000000 5078.919922 203.000000 354.000000 rectfill

n
891.0 5078.92 203.0 354.0 re
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
124.56 621.711 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\007) show
127.08 633.711 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\005) show
Q
n
1.0 1.0 1.0 sc
891.000000 5550.919922 203.000000 354.000000 rectfill

n
891.0 5550.92 203.0 354.0 re
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
124.56 678.351 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\007) show
127.08 690.351 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 758 22 <00010044ffe803a10568002e00cdb90014ffc04046111c3f5d2d6d2d7426
7d2d8e2d9a2da50aa918af2dbb02bb07b50ab918bf2d0e5e005f01026514
7514020502090f0c29030603160324149d2daa2dbe2df515070414141402
14ba038e000001f4b301010e22ba030e0028016cb21b0d0bbc0197000a02
020008016cb20e052bbc01210017030d00050121b64011012f110111bf01
9e0030000a01f4000b030f00010217b32f1f011fbc035d002f00c8035c00
182b10f65df4f4ed10f65d71edf4ed003ffdf4e43feded12392fede45d31
30005d717101715d2b013536373635342623220727363633321615140607
161615140606232227263534363332171e02333236353426260139f27756
644770572534a361769289a7686a90fb8a7e412b33251a1a107d46255a75
4faa02e51d256b4c694f678b0b74778d6c5caa432ba1717dfb892c1e2823
3208054617d17660965d>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/three 22 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 8 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\b) show
125.64 722.631 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 24.013 -24.0 0.0 0.0 0.0] Tf
(\004\004\004)
[5.99996 5.99996 0.0 ] pdfys
Q
n
1.0 1.0 1.0 sc
884.000000 6211.919922 203.000000 355.000000 rectfill

n
884.0 6211.92 203.0 355.0 re
0.0 0.0 0.0 sc
S
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
123.72 756.471 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 18.0099 -18.0 0.0 0.0 0.0] Tf
(\007) show
126.24 768.471 m
%ADOBeginSubsetFont: MSKBAA+TimesNewRoman,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MSKBAA+TimesNewRoman,Italic gcheck setglobal} if
1 2472 80 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>MSKBAA+TimesNewRoman,Italic AddT42Char 
MSKBAA+TimesNewRoman,Italic /CharStrings get begin
/m 80 def
end
MSKBAA+TimesNewRoman,Italic /Encoding get
dup 9 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N7 [0.0 11.6466 -11.64 0.0 0.0 0.0] Tf
(\t) show
Q
n
839.0 4841.92 m
814.0 4875.92 l
815.0 4879.92 l
819.0 4879.92 l
843.0 4844.92 l
844.0 4842.92 l
843.0 4840.92 l
841.0 4840.92 l
839.0 4841.92 l
h
797.0 4899.92 m
772.0 4933.92 l
773.0 4938.92 l
777.0 4937.92 l
801.0 4903.92 l
801.0 4899.92 l
797.0 4899.92 l
h
755.0 4958.92 m
730.0 4992.92 l
731.0 4996.92 l
735.0 4995.92 l
759.0 4961.92 l
759.0 4957.92 l
755.0 4958.92 l
h
712.0 5016.92 m
688.0 5050.92 l
689.0 5055.92 l
693.0 5054.92 l
717.0 5020.92 l
717.0 5016.92 l
712.0 5016.92 l
h
670.0 5075.92 m
646.0 5109.92 l
647.0 5113.92 l
651.0 5112.92 l
675.0 5078.92 l
675.0 5074.92 l
670.0 5075.92 l
h
628.0 5133.92 m
604.0 5167.92 l
605.0 5171.92 l
609.0 5171.92 l
633.0 5137.92 l
633.0 5132.92 l
628.0 5133.92 l
h
586.0 5192.92 m
562.0 5226.92 l
563.0 5230.92 l
567.0 5229.92 l
591.0 5195.92 l
591.0 5191.92 l
586.0 5192.92 l
h
544.0 5250.92 m
520.0 5284.92 l
520.0 5288.92 l
525.0 5288.92 l
549.0 5254.92 l
549.0 5249.92 l
544.0 5250.92 l
h
502.0 5308.92 m
478.0 5343.92 l
478.0 5347.92 l
483.0 5346.92 l
507.0 5312.92 l
506.0 5308.92 l
502.0 5308.92 l
h
460.0 5367.92 m
436.0 5401.92 l
436.0 5405.92 l
441.0 5405.92 l
465.0 5370.92 l
464.0 5366.92 l
460.0 5367.92 l
f
n
859.0 4864.92 m
884.0 4782.92 l
815.0 4832.92 l
859.0 4864.92 l
eofill
n
850.0 5582.92 m
826.0 5548.92 l
822.0 5548.92 l
821.0 5552.92 l
846.0 5586.92 l
847.0 5587.92 l
850.0 5587.92 l
851.0 5585.92 l
850.0 5582.92 l
h
808.0 5524.92 m
784.0 5490.92 l
780.0 5489.92 l
779.0 5493.92 l
804.0 5527.92 l
808.0 5528.92 l
808.0 5524.92 l
h
767.0 5465.92 m
742.0 5431.92 l
738.0 5431.92 l
737.0 5435.92 l
762.0 5469.92 l
766.0 5470.92 l
767.0 5465.92 l
h
725.0 5407.92 m
700.0 5373.92 l
696.0 5372.92 l
695.0 5376.92 l
720.0 5410.92 l
724.0 5411.92 l
725.0 5407.92 l
h
683.0 5348.92 m
658.0 5314.92 l
654.0 5314.92 l
653.0 5318.92 l
678.0 5352.92 l
682.0 5353.92 l
683.0 5348.92 l
h
641.0 5290.92 m
616.0 5256.92 l
612.0 5255.92 l
611.0 5259.92 l
636.0 5293.92 l
640.0 5294.92 l
641.0 5290.92 l
h
599.0 5231.92 m
574.0 5197.92 l
570.0 5197.92 l
569.0 5201.92 l
594.0 5235.92 l
598.0 5236.92 l
599.0 5231.92 l
h
557.0 5173.92 m
532.0 5139.92 l
528.0 5138.92 l
527.0 5142.92 l
552.0 5176.92 l
556.0 5177.92 l
557.0 5173.92 l
h
515.0 5114.92 m
490.0 5080.92 l
486.0 5080.92 l
486.0 5084.92 l
510.0 5118.92 l
514.0 5119.92 l
515.0 5114.92 l
h
473.0 5056.92 m
448.0 5022.92 l
444.0 5021.92 l
444.0 5025.92 l
468.0 5059.92 l
472.0 5060.92 l
473.0 5056.92 l
h
431.0 4997.92 m
428.0 4993.92 l
426.0 4992.92 l
424.0 4993.92 l
423.0 4995.92 l
423.0 4997.92 l
426.0 5001.92 l
430.0 5002.92 l
431.0 4997.92 l
f
n
822.0 5594.92 m
891.0 5645.92 l
866.0 5563.92 l
822.0 5594.92 l
eofill
n
822.0 4740.92 m
426.0 4995.92 l
S
n
831.0 4766.92 m
884.0 4700.92 l
802.0 4721.92 l
831.0 4766.92 l
eofill
n
863.0 6235.92 m
849.0 6195.92 l
845.0 6193.92 l
843.0 6197.92 l
857.0 6237.92 l
859.0 6239.92 l
861.0 6239.92 l
863.0 6237.92 l
863.0 6235.92 l
h
839.0 6167.92 m
825.0 6127.92 l
821.0 6125.92 l
819.0 6129.92 l
833.0 6169.92 l
837.0 6171.92 l
839.0 6167.92 l
h
815.0 6099.92 m
801.0 6059.92 l
797.0 6057.92 l
796.0 6061.92 l
809.0 6101.92 l
813.0 6103.92 l
815.0 6099.92 l
h
791.0 6031.92 m
777.0 5991.92 l
774.0 5990.92 l
772.0 5993.92 l
786.0 6033.92 l
790.0 6035.92 l
791.0 6031.92 l
h
768.0 5963.92 m
754.0 5923.92 l
750.0 5922.92 l
748.0 5925.92 l
762.0 5965.92 l
766.0 5967.92 l
768.0 5963.92 l
h
744.0 5895.92 m
730.0 5855.92 l
726.0 5854.92 l
724.0 5857.92 l
738.0 5897.92 l
742.0 5899.92 l
744.0 5895.92 l
h
720.0 5827.92 m
706.0 5787.92 l
702.0 5786.92 l
700.0 5789.92 l
714.0 5829.92 l
718.0 5831.92 l
720.0 5827.92 l
h
696.0 5759.92 m
682.0 5720.92 l
679.0 5718.92 l
677.0 5722.92 l
691.0 5761.92 l
694.0 5763.92 l
696.0 5759.92 l
h
672.0 5691.92 m
659.0 5652.92 l
655.0 5650.92 l
653.0 5654.92 l
667.0 5693.92 l
671.0 5695.92 l
672.0 5691.92 l
h
649.0 5623.92 m
635.0 5584.92 l
631.0 5582.92 l
629.0 5586.92 l
643.0 5625.92 l
647.0 5627.92 l
649.0 5623.92 l
h
625.0 5555.92 m
611.0 5516.92 l
607.0 5514.92 l
605.0 5518.92 l
619.0 5557.92 l
623.0 5559.92 l
625.0 5555.92 l
h
601.0 5487.92 m
587.0 5448.92 l
583.0 5446.92 l
582.0 5450.92 l
595.0 5489.92 l
599.0 5491.92 l
601.0 5487.92 l
h
577.0 5419.92 m
563.0 5380.92 l
560.0 5378.92 l
558.0 5382.92 l
572.0 5421.92 l
576.0 5423.92 l
577.0 5419.92 l
h
554.0 5351.92 m
540.0 5312.92 l
536.0 5310.92 l
534.0 5314.92 l
548.0 5353.92 l
552.0 5355.92 l
554.0 5351.92 l
h
530.0 5284.92 m
516.0 5244.92 l
512.0 5242.92 l
510.0 5246.92 l
524.0 5286.92 l
528.0 5287.92 l
530.0 5284.92 l
h
506.0 5216.92 m
492.0 5176.92 l
488.0 5174.92 l
486.0 5178.92 l
500.0 5218.92 l
504.0 5219.92 l
506.0 5216.92 l
h
482.0 5148.92 m
468.0 5108.92 l
465.0 5106.92 l
463.0 5110.92 l
477.0 5150.92 l
480.0 5151.92 l
482.0 5148.92 l
h
458.0 5080.92 m
445.0 5040.92 l
441.0 5038.92 l
439.0 5042.92 l
453.0 5082.92 l
457.0 5083.92 l
458.0 5080.92 l
h
435.0 5012.92 m
428.0 4994.92 l
427.0 4992.92 l
425.0 4992.92 l
423.0 4994.92 l
423.0 4996.92 l
429.0 5014.92 l
433.0 5016.92 l
435.0 5012.92 l
f
n
832.0 6238.92 m
884.0 6306.92 l
883.0 6221.92 l
832.0 6238.92 l
eofill
n
825.0 6403.92 m
426.0 6105.92 l
S
n
803.0 6421.92 m
884.0 6448.92 l
836.0 6378.92 l
803.0 6421.92 l
eofill
n
833.0 5740.92 m
426.0 5420.92 l
S
n
811.0 5757.92 m
891.0 5786.92 l
844.0 5715.92 l
811.0 5757.92 l
eofill
n
853.0 5319.92 m
833.0 5355.92 l
834.0 5359.92 l
838.0 5358.92 l
858.0 5321.92 l
858.0 5319.92 l
857.0 5317.92 l
855.0 5317.92 l
853.0 5319.92 l
h
818.0 5382.92 m
798.0 5418.92 l
799.0 5423.92 l
803.0 5421.92 l
824.0 5385.92 l
822.0 5380.92 l
818.0 5382.92 l
h
784.0 5445.92 m
764.0 5482.92 l
765.0 5486.92 l
769.0 5485.92 l
789.0 5448.92 l
788.0 5444.92 l
784.0 5445.92 l
h
749.0 5508.92 m
729.0 5545.92 l
730.0 5549.92 l
734.0 5548.92 l
754.0 5511.92 l
753.0 5507.92 l
749.0 5508.92 l
h
715.0 5571.92 m
694.0 5608.92 l
696.0 5612.92 l
700.0 5611.92 l
720.0 5574.92 l
719.0 5570.92 l
715.0 5571.92 l
h
680.0 5634.92 m
660.0 5671.92 l
661.0 5675.92 l
665.0 5674.92 l
685.0 5637.92 l
684.0 5633.92 l
680.0 5634.92 l
h
645.0 5697.92 m
625.0 5734.92 l
626.0 5738.92 l
631.0 5737.92 l
651.0 5700.92 l
650.0 5696.92 l
645.0 5697.92 l
h
611.0 5761.92 m
591.0 5797.92 l
592.0 5801.92 l
596.0 5800.92 l
616.0 5763.92 l
615.0 5759.92 l
611.0 5761.92 l
h
576.0 5824.92 m
556.0 5861.92 l
557.0 5865.92 l
561.0 5863.92 l
582.0 5827.92 l
580.0 5822.92 l
576.0 5824.92 l
h
542.0 5887.92 m
522.0 5924.92 l
523.0 5928.92 l
527.0 5927.92 l
547.0 5890.92 l
546.0 5886.92 l
542.0 5887.92 l
h
507.0 5950.92 m
487.0 5987.92 l
488.0 5991.92 l
492.0 5990.92 l
512.0 5953.92 l
511.0 5949.92 l
507.0 5950.92 l
h
473.0 6013.92 m
452.0 6050.92 l
454.0 6054.92 l
458.0 6053.92 l
478.0 6016.92 l
477.0 6012.92 l
473.0 6013.92 l
h
438.0 6076.92 m
423.0 6104.92 l
423.0 6106.92 l
424.0 6108.92 l
426.0 6108.92 l
428.0 6107.92 l
443.0 6079.92 l
442.0 6075.92 l
438.0 6076.92 l
f
n
876.0 5339.92 m
891.0 5255.92 l
829.0 5313.92 l
876.0 5339.92 l
eofill
q
8.33333 0.0 0.0 8.33333 0.0 0.0 cm
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: KHNBAA+Arial Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /KHNBAA+Arial
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c796600000000000027900000028468656164ce98269100000dc40000
003668686561123312ff00000dfc00000024686d74780000000000000e20
000001206c6f63610000000000000f4000000d166d6178700b470ca80000
1c58000000206e616d650000000000001c78000000177072657052fec4e9
00001c9000000aff67646972000000000000000000000000000100000190
000500000000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d00000001000000030000b1b0afba5f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100000000000000010000073efe4e00431000faaffe2610000001
000000000000000000000000000000480600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010002aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa
007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c
02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa
007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c
02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa
007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c
02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa
007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c02aa007c
047300460000001500150015001500150015001500150015001500150015
006800680068006800680068006800680068006800680068006800680068
006800680068006800680068006800680068006800680068006800680068
006800680068006800680068006800680068006800680068006800680068
006800680068006800680068006800680068006800680068006800680142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142014201420142
014201420142014201420142014201420142014201420142000000010000
068a0100003f0076000700020010002f00560000040dffff000300020000
00010012000200020000000600050000417269616c00b1540f4122031700
ef031700ff03170003001f0317002f0317004f0317005f0317008f031700
9f03170006000f0317005f0317006f0317007f031700bf031700f0031700
0600400317b2923340b80317b28b3340b80317b36a6c3240b80317b26133
40b80317b35c5d3240b80317b357593240b80317b34d513240b80317b344
493240b80317b23a3340b80317b331343240b80317b32e423240b80317b3
272c3240b80317b312253280b80317b30a0d32c04116031600d003160002
00700316000102c4000f0101001f00a0031500b0031500020306000f0101
001f00400312b32426329fbf03040001030203010064001fffc00301b20d
1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f41
4a02e200af02e200bf02e2000302e202e202e102e1007f02e00001001002
e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df02
df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd00
ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02dc00
0202dc02dc001002db000102db02db000f02da000102da02daffc002d3b2
373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32
b9ffc002d3b2121632b802d2b2f9291fb802e3b3202b1fa0413002d400b0
02d40002000002d4001002d4002002d4005002d4006002d4007002d40006
006002d6007002d6008002d6009002d600a002d600b002d60006000002d6
001002d6002002ca002002cc002002d6003002d6004002d6005002d60008
02d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c8001700
1f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b2
1e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b32412
1fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f
02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800001f
02a600a20800406a1f4026434932402043493240263a3d3240203a3d329f
209f26024026969932402096993240268e923240208e92324026848c3240
20848c3240267a813240207a813240266c763240206c76324026646a3240
20646a3240265a5f3240205a5f3240264f543240204f5432b8029eb72427
1f374f6b0120410f02770030027700400277005002770004027702770277
00f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180
a201806501807e01808101803c01805e01802b01801c01801e0180400180
bb0138000100800140b40180400180bb013800010080013940180180ca01
80ad018073018026018025018024018020013740b80221b2493340b80221
b2453340b80221b341423240b80221b33d3e320f410f0221003f0221007f
0221000300bf022100cf022100ff0221000300400221b320223240b80221
b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02c300
8f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02
c3005f02c300c002c300ef02c300ff02c3000600df02220001008f022200
01000f0222002f0222003f0222005f0222007f022200ef0222000600bf02
2100ef02210002006f0221007f022100af02210003002f0221003f022100
4f0221000302c302c30222022202210221401d101c102b1048038f1c010f
1e014f1eff1e023700161600000012110811b8010db6f70df8f70d000941
09028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f
41150197001e0401001f013900260125001f013800730401001f0135001c
0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e001e
0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51cb802
abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c
381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb8
0401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f441c62
1f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f
2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168
402c07960758074f07360732072c0721071f071d071b071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515a
b005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b1
01018e59b0382bb00288b801005458b801ffb101018e851bb0124358b900
010111858d1bb900010128858d5959001816763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59
b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f04544
5958b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001
f14544b9002601f145445958b9081e0020455258b90020081e4459594bb8
019a53205c58b9002501f24544b9002401f245445958b909090025455258
b9002509094459594bb8040153205c58b173244544b1242445445958b917
200073455258b9007317204459594bb8040153205c58b1ca254544b12525
45445958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c
4544b11e1c45445958b9011a001c455258b9001c011a4459594bb0565320
5c58b11c1c4544b12f1c45445958b90189001c455258b9001c0189445959
4bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258b900
1c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c456523
456023456560234560b08b766818b080622020b163594565234520b00326
6062636820b003266165b059236544b063234420b13b5c4565234520b003
266062636820b003266165b05c236544b03b2344b1005c455458b15c4065
44b23b403b4523614459b347503437456523456023456560234560b08976
6818b080622020b134504565234520b003266062636820b003266165b050
236544b034234420b147374565234520b003266062636820b003266165b0
37236544b0472344b10037455458b137406544b24740474523614459004b
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b7475
737500184569444569444569447373737374757374752b2b2b2b74752b2b
2b2b2b737373737373737373737373737373737373737373737373732b2b
2b45b0406144737400004bb02a534bb03f515a58b1070745b04060445900
4bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a
58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58
b9008002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a
58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373
732b002b2b2b2b2b2b004569447345694473456944737475456944734569
444569444569447374456944456944732b2b2b2b2b732b002b732b74752b
2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[645 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>KHNBAA+Arial AddT42Char 
KHNBAA+Arial /CharStrings get begin
end
end
%ADOEndSubsetFont
[ 1 /d/parenright 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N9/KHNBAA+Arial -1 TZ
152.52 665.511 m
%ADOBeginSubsetFont: KHNBAA+Arial AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KHNBAA+Arial gcheck setglobal} if
1 208 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>KHNBAA+Arial AddT42Char 
1 42 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>KHNBAA+Arial AddT42Char 
KHNBAA+Arial /CharStrings get begin
/d 71 def
/parenright 12 def
end
KHNBAA+Arial /Encoding get
dup 1 /d put
dup 2 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N9 [0.0 14.0476 -14.04 0.0 0.0 0.0] Tf
(\001\002)
[7.79785 4.67774 ] pdfys
Q
Q
Q
/KHNBAA+Arial /Font _pdfUndefineResource
/N9 /Font _pdfUndefineResource
/MSKBAA+TimesNewRoman,Italic /Font _pdfUndefineResource
/N7 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
